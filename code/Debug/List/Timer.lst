###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         23/May/2021  15:09:19
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  D:\Git\POIP\Kursovoy\code\AHardware\Timer\Timer.cpp
#    Command line =
#        -f C:\Users\KONSTA~1\AppData\Local\Temp\EW3BD2.tmp
#        (D:\Git\POIP\Kursovoy\code\AHardware\Timer\Timer.cpp -lC
#        D:\Git\POIP\Kursovoy\code\Debug\List -lA
#        D:\Git\POIP\Kursovoy\code\Debug\List -o
#        D:\Git\POIP\Kursovoy\code\Debug\Obj --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        D:\IAR\arm\inc\c\DLib_Config_Normal.h -I
#        D:\Git\POIP\Kursovoy\code\Rtos\ -I
#        D:\Git\POIP\Kursovoy\code\Rtos\wrapper\ -I
#        D:\Git\POIP\Kursovoy\code\Rtos\wrapper\FreeRtos\ -I
#        D:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\ -I
#        D:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\include\ -I
#        D:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\portable\ -I
#        D:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\portable\Common\ -I
#        D:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\portable\IAR\ -I
#        D:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\portable\IAR\ARM_CM4F\ -I
#        D:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\portable\MemMang\ -I
#        D:\Git\POIP\Kursovoy\code\MyTasks\ -I
#        D:\Git\POIP\Kursovoy\code\Common\ -I D:\Git\POIP\Kursovoy\code\CMSIS\
#        -I D:\Git\POIP\Kursovoy\code\Application\ -I
#        D:\Git\POIP\Kursovoy\code\Application\Diagnostic\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\GpioPort\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\IrqController\ -I
#        D:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Pin\ -I
#        D:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Registers\STM32F411\FieldValues\
#        -I
#        D:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Registers\STM32F411\
#        -I D:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Registers\
#        -I D:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Port\ -I
#        D:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Atomic\ -I
#        D:\Git\POIP\Kursovoy\code\..\CortexLib\Common\ -I
#        D:\Git\POIP\Kursovoy\code\..\CortexLib\Common\Singleton\ -I
#        D:\Git\POIP\Kursovoy\code\..\CortexLib\Common\RomObject\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Registers\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Registers\CortexM4\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Registers\CortexM4\FieldValues\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Registers\STM32F411\FieldValues\
#        -I D:\Git\POIP\Kursovoy\code\Common\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Atomic\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\USART\ -I
#        D:\Git\POIP\Kursovoy\code\Tasks\ -I
#        D:\Git\POIP\Kursovoy\code\Application\Button\ -I
#        D:\Git\POIP\Kursovoy\code\Application\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Timer\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Registers\STM32F411\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Registers\IrqController\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Button\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\ButtonPoll\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\ITransmit\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\LCDDriver\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\SMBus\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\SPIx\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\TempSens\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Timer\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\UART\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\UARTDriver\ -I
#        D:\Git\POIP\Kursovoy\code\Application\Filter\ -I
#        D:\Git\POIP\Kursovoy\code\Application\Tasks\ -I
#        D:\Git\POIP\Kursovoy\code\Application\Tasks\BlueToothTask\ -I
#        D:\Git\POIP\Kursovoy\code\Application\Tasks\ScreenTask\ -I
#        D:\Git\POIP\Kursovoy\code\Application\Tasks\TemperatureTask\ -I
#        D:\Git\POIP\Kursovoy\code\Application\Temp\ -I
#        D:\Git\POIP\Kursovoy\code\Application\Temp\Temp\ -I
#        D:\Git\POIP\Kursovoy\code\Application\Temp\Units\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\InterruptHandler\ -I
#        D:\Git\POIP\Kursovoy\code\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Temp\ -I
#        D:\Git\POIP\Kursovoy\code\Common\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\LCDDriver\Fonts\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Pin\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Port\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Atomic\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\LCDDriver\ -I
#        D:\Git\POIP\Kursovoy\code\AHardware\Filter\ -Ol --c++ --no_exceptions
#        --no_rtti)
#    Locale       =  C
#    List file    =  D:\Git\POIP\Kursovoy\code\Debug\List\Timer.lst
#    Object file  =  D:\Git\POIP\Kursovoy\code\Debug\Obj\Timer.o
#
###############################################################################

D:\Git\POIP\Kursovoy\code\AHardware\Timer\Timer.cpp
      1          #include "timer.hpp" // for Timer

   \                                 In section .text, align 4
   \   __interwork __vfp void FieldValueBase<TIM2_SR_UIF_Values<TIM2::SR, 0U, 1U, ReadWriteMode, TIM2::TIM2SRBase>, TIM2::TIM2SRBase, 0U>::Set<ReadWriteMode, void>()
   \                     _ZN14FieldValueBaseI18TIM2_SR_UIF_ValuesIN4TIM22SRELj0ELj1E13ReadWriteModeNS1_10TIM2SRBaseEES4_Lj0EE3SetIS3_vEEvv: (+1)
   \        0x0   0x4902             LDR.N    R1,??Set_0       ;; 0x40000010
   \        0x2   0x6808             LDR      R0,[R1, #+0]
   \        0x4   0x0840             LSRS     R0,R0,#+1
   \        0x6   0x0040             LSLS     R0,R0,#+1
   \        0x8   0x6008             STR      R0,[R1, #+0]
   \        0xA   0x4770             BX       LR               ;; return
   \                     ??Set_0:
   \        0xC   0x4000'0010        DC32     0x40000010

   \                                 In section .text, align 4
   \   __interwork __vfp uint32_t RegisterBase<1073874960U, 32U, ReadMode>::Get<ReadMode, void>()
   \                     _ZN12RegisterBaseILj1073874960ELj32E8ReadModeE3GetIS0_vEEjv: (+1)
   \        0x0   0x4801             LDR.N    R0,??Get_0       ;; 0x40020810
   \        0x2   0x6800             LDR      R0,[R0, #+0]
   \        0x4   0x4770             BX       LR               ;; return
   \        0x6   0xBF00             Nop      
   \                     ??Get_0:
   \        0x8   0x4002'0810        DC32     0x40020810

   \                                 In section .rodata, align 1
   \   __absolute bool const std::chrono::system_clock::is_steady
   \                     _ZNSt6chrono12system_clock9is_steadyE:
   \        0x0   0x00               DC8 0

   \                                 In section .rodata, align 1
   \   __absolute bool const std::chrono::system_clock::is_monotonic
   \                     _ZNSt6chrono12system_clock12is_monotonicE:
   \        0x0   0x00               DC8 0

   \                                 In section .rodata, align 1
   \   __absolute bool const std::chrono::steady_clock::is_steady
   \                     _ZNSt6chrono12steady_clock9is_steadyE:
   \        0x0   0x01               DC8 1

   \                                 In section .text, align 4
   \   __interwork __vfp void OsWrapper::RtosWrapper::wSignalEvent(void * const &, uint32_t)
   \                     _ZN9OsWrapper11RtosWrapper12wSignalEventERKPvj: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x000A             MOVS     R2,R1
   \        0x4   0x2100             MOVS     R1,#+0
   \        0x6   0x9100             STR      R1,[SP, #+0]
   \        0x8   0x466B             MOV      R3,SP
   \        0xA   0x6801             LDR      R1,[R0, #+0]
   \        0xC   0x4808             LDR.N    R0,??wSignalEvent_0
   \        0xE   0x....'....        BL       xTimerPendFunctionCallFromISR
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD00A             BEQ.N    ??wSignalEvent_1
   \       0x16   0x9800             LDR      R0,[SP, #+0]
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD007             BEQ.N    ??wSignalEvent_1
   \       0x1C   0xF05F 0x5080      MOVS     R0,#+268435456
   \       0x20   0x4904             LDR.N    R1,??wSignalEvent_0+0x4  ;; 0xe000ed04
   \       0x22   0x6008             STR      R0,[R1, #+0]
   \       0x24   0xF3BF 0x8F4F      DSB      SY
   \       0x28   0xF3BF 0x8F6F      ISB      SY
   \                     ??wSignalEvent_1: (+1)
   \       0x2C   0xBD01             POP      {R0,PC}          ;; return
   \       0x2E   0xBF00             Nop      
   \                     ??wSignalEvent_0:
   \       0x30   0x....'....        DC32     vEventGroupSetBitsCallback
   \       0x34   0xE000'ED04        DC32     0xe000ed04

   \                                 In section .text, align 2
   \   __interwork __vfp void OsWrapper::Event::Signal()
   \                     _ZN9OsWrapper5Event6SignalEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x6A01             LDR      R1,[R0, #+32]
   \        0x4   0x....'....        BL       _ZN9OsWrapper11RtosWrapper12wSignalEventERKPvj
   \        0x8   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __vfp bool Button<GPIOC, 13>::IsPressed()
   \                     _ZN6ButtonI5GPIOCLi13EE9IsPressedEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....'....        BL       _ZN12RegisterBaseILj1073874960ELj32E8ReadModeE3GetIS0_vEEjv
   \        0x6   0x0B40             LSRS     R0,R0,#+13
   \        0x8   0xF010 0x0001      ANDS     R0,R0,#0x1
   \        0xC   0xF090 0x0001      EORS     R0,R0,#0x1
   \       0x10   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x12   0xBD02             POP      {R1,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __vfp void ButtonPoll<Timer>::Poll()
   \                     _ZN10ButtonPollI5TimerE4PollEv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x6860             LDR      R0,[R4, #+4]
   \        0x6   0x....'....        BL       _ZN6ButtonI5GPIOCLi13EE9IsPressedEv
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD002             BEQ.N    ??Poll_0
   \        0xE   0x6820             LDR      R0,[R4, #+0]
   \       0x10   0x....'....        BL       _ZN9OsWrapper5Event6SignalEv
   \                     ??Poll_0: (+1)
   \       0x14   0xBD10             POP      {R4,PC}          ;; return
      2          #include "interruptentry.hpp" //for InterruptEntry
      3          

   \                                 In section .text, align 4, keep-with-next
      4          void Timer::InterruptHandler()
      5          {
   \                     _ZN5Timer16InterruptHandlerEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
      6            buttonPoll.Poll();
   \        0x2   0x4803             LDR.N    R0,??InterruptHandler_0
   \        0x4   0x....'....        BL       _ZN10ButtonPollI5TimerE4PollEv
      7            TIM2::SR::UIF::NoInterruptPending::Set();
   \        0x8   0x....'....        BL       _ZN14FieldValueBaseI18TIM2_SR_UIF_ValuesIN4TIM22SRELj0ELj1E13ReadWriteModeNS1_10TIM2SRBaseEES4_Lj0EE3SetIS3_vEEvv
      8          }
   \        0xC   0xBD01             POP      {R0,PC}          ;; return
   \        0xE   0xBF00             Nop      
   \                     ??InterruptHandler_0:
   \       0x10   0x....'....        DC32     buttonPoll

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Button<GPIOC, 13>::IsPressed()
         8   -> RegisterBase<1073874960U, 32U, ReadMode>::Get<ReadMode, void>()
       8   ButtonPoll<Timer>::Poll()
         8   -> Button<GPIOC, 13>::IsPressed()
         8   -> OsWrapper::Event::Signal()
       0   FieldValueBase<TIM2_SR_UIF_Values<TIM2::SR, 0U, 1U, ReadWriteMode, TIM2::TIM2SRBase>, TIM2::TIM2SRBase, 0U>::Set<ReadWriteMode, void>()
       8   OsWrapper::Event::Signal()
         8   -> OsWrapper::RtosWrapper::wSignalEvent(void * const &, uint32_t)
       8   OsWrapper::RtosWrapper::wSignalEvent(void * const &, uint32_t)
         8   -> xTimerPendFunctionCallFromISR
       0   RegisterBase<1073874960U, 32U, ReadMode>::Get<ReadMode, void>()
       8   Timer::InterruptHandler()
         8   -> ButtonPoll<Timer>::Poll()
         8   -> FieldValueBase<TIM2_SR_UIF_Values<TIM2::SR, 0U, 1U, ReadWriteMode, TIM2::TIM2SRBase>, TIM2::TIM2SRBase, 0U>::Set<ReadWriteMode, void>()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  Button<GPIOC, 13>::IsPressed()
      22  ButtonPoll<Timer>::Poll()
      16  FieldValueBase<TIM2_SR_UIF_Values<TIM2::SR, 0U, 1U, ReadWriteMode, TIM2::TIM2SRBase>, TIM2::TIM2SRBase, 0U>::Set<ReadWriteMode, void>()
      10  OsWrapper::Event::Signal()
      56  OsWrapper::RtosWrapper::wSignalEvent(void * const &, uint32_t)
      12  RegisterBase<1073874960U, 32U, ReadMode>::Get<ReadMode, void>()
      20  Timer::InterruptHandler()
       1  std::chrono::steady_clock::is_steady
       1  std::chrono::system_clock::is_monotonic
       1  std::chrono::system_clock::is_steady

 
   3 bytes in section .rodata
 156 bytes in section .text
 
 20 bytes of CODE  memory (+ 136 bytes shared)
  0 bytes of CONST memory (+   3 bytes shared)

Errors: none
Warnings: none
