###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         09/Apr/2021  22:24:43
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  E:\Git\POIP\Kursovoy\code\startupF411RE.cpp
#    Command line =
#        -f C:\Users\D9F8~1\AppData\Local\Temp\EW7E29.tmp
#        (E:\Git\POIP\Kursovoy\code\startupF411RE.cpp -lC
#        E:\Git\POIP\Kursovoy\code\Debug\List -lA
#        E:\Git\POIP\Kursovoy\code\Debug\List -o
#        E:\Git\POIP\Kursovoy\code\Debug\Obj --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        "D:\@@@@@\@@@@@@\7
#        @@@@@\IAR\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\Git\POIP\Kursovoy\code\Rtos\ -I
#        E:\Git\POIP\Kursovoy\code\Rtos\wrapper\ -I
#        E:\Git\POIP\Kursovoy\code\Rtos\wrapper\FreeRtos\ -I
#        E:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\ -I
#        E:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\include\ -I
#        E:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\portable\ -I
#        E:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\portable\Common\ -I
#        E:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\portable\IAR\ -I
#        E:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\portable\IAR\ARM_CM4F\ -I
#        E:\Git\POIP\Kursovoy\code\Rtos\FreeRtos\portable\MemMang\ -I
#        E:\Git\POIP\Kursovoy\code\MyTasks\ -I
#        E:\Git\POIP\Kursovoy\code\Common\ -I E:\Git\POIP\Kursovoy\code\CMSIS\
#        -I E:\Git\POIP\Kursovoy\code\Application\ -I
#        E:\Git\POIP\Kursovoy\code\Application\Diagnostic\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\GpioPort\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\IrqController\ -I
#        E:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Pin\ -I
#        E:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Registers\STM32F411\FieldValues\
#        -I
#        E:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Registers\STM32F411\
#        -I E:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Registers\
#        -I E:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Port\ -I
#        E:\Git\POIP\Kursovoy\code\..\CortexLib\AbstractHardware\Atomic\ -I
#        E:\Git\POIP\Kursovoy\code\..\CortexLib\Common\ -I
#        E:\Git\POIP\Kursovoy\code\..\CortexLib\Common\Singleton\ -I
#        E:\Git\POIP\Kursovoy\code\..\CortexLib\Common\RomObject\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\Registers\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\Registers\CortexM4\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\Registers\CortexM4\FieldValues\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\Registers\STM32F411\FieldValues\
#        -I E:\Git\POIP\Kursovoy\code\Common\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\Atomic\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\USART\ -I
#        E:\Git\POIP\Kursovoy\code\Tasks\ -I
#        E:\Git\POIP\Kursovoy\code\Application\Button\ -I
#        E:\Git\POIP\Kursovoy\code\Application\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\Timer\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\Registers\STM32F411\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\Registers\IrqController\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\Button\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\ButtonPoll\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\ITransmit\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\LCDDriver\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\SMBus\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\SPIx\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\TempSens\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\Timer\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\UART\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\UARTDriver\ -I
#        E:\Git\POIP\Kursovoy\code\Application\Filter\ -I
#        E:\Git\POIP\Kursovoy\code\Application\Tasks\ -I
#        E:\Git\POIP\Kursovoy\code\Application\Tasks\BlueToothTask\ -I
#        E:\Git\POIP\Kursovoy\code\Application\Tasks\ScreenTask\ -I
#        E:\Git\POIP\Kursovoy\code\Application\Tasks\TemperatureTask\ -I
#        E:\Git\POIP\Kursovoy\code\Application\Temp\ -I
#        E:\Git\POIP\Kursovoy\code\Application\Temp\Temp\ -I
#        E:\Git\POIP\Kursovoy\code\Application\Temp\Units\ -I
#        E:\Git\POIP\Kursovoy\code\AHardware\InterruptHandler\ -I
#        E:\Git\POIP\Kursovoy\code\ -Ol --c++ --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =  E:\Git\POIP\Kursovoy\code\Debug\List\startupF411RE.lst
#    Object file  =  E:\Git\POIP\Kursovoy\code\Debug\Obj\startupF411RE.o
#
###############################################################################

E:\Git\POIP\Kursovoy\code\startupF411RE.cpp
      1          
      2          #pragma language = extended
      3          #pragma segment = "CSTACK"
      4          #include "USARTDriver.h"
      5          
      6          #include "usartconfig.h"
      7          #include "Timer.hpp"

    buttonPoll.Poll();
    ^
"E:\Git\POIP\Kursovoy\code\AHardware\Timer\Timer.hpp",29  Error[Pe020]: 
          identifier "buttonPoll" is undefined
      8          
      9          extern "C" void __iar_program_start( void );
     10          extern "C" void xPortPendSVHandler(void);
     11          
     12          
     13          class Uart
     14          {
     15          public:
     16            static void interruptHandler()
     17            {
     18              usartDriver.OnNextByteTransmit();
     19            }
     20          };
     21          
     22          
     23          class DummyModule
     24          {
     25            public:
     26              static void handler();
     27          };
     28          
     29          using tIntFunct = void(*)();
     30          //cstat !MISRAC++2008-9-5-1
     31          using tIntVectItem = union {tIntFunct __fun; void * __ptr;};
     32          
     33          // The vector table is normally located at address 0.
     34          // When debugging in RAM, it can be located in RAM, aligned to at least 2^6.
     35          // If you need to define interrupt service routines,
     36          // make a copy of this file and include it in your project.
     37          // The name "__vector_table" has special meaning for C-SPY:
     38          // it is where the SP start value is found, and the NVIC vector
     39          // table register (VTOR) is initialized to this address if != 0.
     40          
     41          #pragma location = ".intvec"
     42          //cstat !MISRAC++2008-0-1-4_b !MISRAC++2008-9-5-1
     43          extern "C" const tIntVectItem __vector_table[] =
     44          {
     45            { .__ptr = __sfe( "CSTACK" ) },
     46            __iar_program_start,
     47          
     48            DummyModule::handler,
     49            DummyModule::handler,
     50            DummyModule::handler,
     51            DummyModule::handler,
     52            DummyModule::handler,
     53            0,
     54            0,
     55            0,
     56            0,
     57            DummyModule::handler,
     58            DummyModule::handler,
     59            0,
     60            DummyModule::handler,
     61            DummyModule::handler,
     62            //External Interrupts
     63            DummyModule::handler,         //Window Watchdog
     64            DummyModule::handler,         //PVD through EXTI Line detect/EXTI16
     65            DummyModule::handler,         //Tamper and Time Stamp/EXTI21 
     66            DummyModule::handler,         //RTC Wakeup/EXTI22 
     67            DummyModule::handler,         //FLASH
     68            DummyModule::handler,         //RCC
     69            DummyModule::handler,         //EXTI Line 0
     70            DummyModule::handler,         //EXTI Line 1
     71            DummyModule::handler,         //EXTI Line 2
     72            DummyModule::handler,         //EXTI Line 3
     73            DummyModule::handler,         //EXTI Line 4
     74            DummyModule::handler,         //DMA1 Stream 0
     75            DummyModule::handler,         //DMA1 Stream 1
     76            DummyModule::handler,         //DMA1 Stream 2
     77            DummyModule::handler,         //DMA1 Stream 3
     78            DummyModule::handler,         //DMA1 Stream 4
     79            DummyModule::handler,         //DMA1 Stream 5
     80            DummyModule::handler,         //DMA1 Stream 6
     81            DummyModule::handler,         //ADC1
     82            0,                            //USB High Priority
     83            0,                            //USB Low  Priority
     84            0,                            //DAC
     85            0,                            //COMP through EXTI Line
     86            DummyModule::handler,         //EXTI Line 9..5
     87            DummyModule::handler,         //TIM9/TIM1 Break interrupt 
     88            DummyModule::handler,         //TIM10/TIM1 Update interrupt
     89            DummyModule::handler,         //TIM11/TIM1 Trigger/Commutation interrupts
     90            DummyModule::handler,		//TIM1 Capture Compare interrupt
     91            Timer::InterruptHandler,         //TIM2  	
     92            DummyModule::handler,         //TIM3
     93            DummyModule::handler,         //TIM4
     94            DummyModule::handler,         //I2C1 Event
     95            DummyModule::handler,         //I2C1 Error
     96            DummyModule::handler,         //I2C2 Event
     97            DummyModule::handler,         //I2C2 Error
     98            DummyModule::handler,         //SPI1
     99            DummyModule::handler,         //SPI2
    100            DummyModule::handler,         //USART1
    101            Uart::interruptHandler,         //USART2
    102            0,
    103            DummyModule::handler,         //EXTI Line 15..10
    104            DummyModule::handler,         //EXTI Line 17 interrupt / RTC Alarms (A and B) through EXTI line interrupt
    105            DummyModule::handler,         //EXTI Line 18 interrupt / USB On-The-Go  FS Wakeup through EXTI line interrupt
    106            0,				//TIM6
    107            0,				//TIM7  f0
    108            0,
    109            0,
    110            DummyModule::handler,         //DMA1 Stream 7 global interrupt fc
    111            0,
    112            DummyModule::handler,	        //SDIO global interrupt
    113            DummyModule::handler,	        //TIM5 global interrupt
    114            DummyModule::handler,	        //SPI3 global interrupt
    115            0,			        // 110
    116            0,
    117            0,
    118            0,
    119            DummyModule::handler,		//DMA2 Stream0 global interrupt 120
    120            DummyModule::handler,		//DMA2 Stream1 global interrupt
    121            DummyModule::handler,		//DMA2 Stream2 global interrupt
    122            DummyModule::handler,		//DMA2 Stream3 global interrupt
    123            DummyModule::handler,		//DMA2 Stream4 global interrupt 130
    124            0,
    125            0,
    126            0,
    127            0,
    128            0,
    129            0,
    130            DummyModule::handler,		//USB On The Go FS global interrupt, 14C
    131            DummyModule::handler,		//DMA2 Stream5 global interrupt
    132            DummyModule::handler,		//DMA2 Stream6 global interrupt
    133            DummyModule::handler,		//DMA2 Stream7 global interrupt
    134            DummyModule::handler,				//USART6 15C
    135            DummyModule::handler,         //I2C3 Event
    136            DummyModule::handler,         //I2C3 Error 164
    137            0,
    138            0,
    139            0,
    140            0,
    141            0,
    142            0,
    143            0,
    144            DummyModule::handler,		//FPU 184
    145            0,
    146            0,
    147            DummyModule::handler,		//SPI 4 global interrupt
    148            DummyModule::handler		//SPI 5 global interrupt
    149          };
    150          
    151          void DummyModule::handler()   { for(;;) {} } ;
    152          
    153          extern "C" void __cmain( void );
    154          extern "C" __weak void __iar_init_core( void );
    155          extern "C" __weak void __iar_init_vfp( void );
    156          
    157          #pragma required=__vector_table
    158          void __iar_program_start( void )
    159          {
    160            __iar_init_core();
    161            __iar_init_vfp();
    162            __cmain();
    163          }
    164          

Errors: 1
Warnings: none
